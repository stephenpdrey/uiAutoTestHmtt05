{
  "uid" : "14f50b9e4e1bbcd9",
  "name" : "test_app_login",
  "fullName" : "scripts.test05_app_login.TestAppLogin#test_app_login",
  "historyId" : "63e781105a8add2ee581dba9242d20e2",
  "time" : {
    "start" : 1594268714230,
    "stop" : 1594268850267,
    "duration" : 136037
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <scripts.test05_app_login.TestAppLogin object at 0x041AEA10>, phone = '13812345678', code = '246810'\n\n    def test_app_login(self, phone=\"13812345678\", code=\"246810\"):\n        # 1. 调用登录app业务方法\n>       self.login.page_app_login(phone, code)\n\nscripts\\test05_app_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\page_app_login.py:28: in page_app_login\n    self.page_click_login_btn()\npage\\page_app_login.py:18: in page_click_login_btn\n    self.base_click(page.app_login_btn)\nbase\\base.py:49: in base_click\n    self.base_find(loc).click()\nbase\\base.py:25: in base_find\n    poll_frequency=poll).until(lambda x: x.find_element(*loc)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"145dda07-f6f0-41c6-84ca-81f0dbc8c8da\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x041B14F8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\program files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1594268669412,
      "stop" : 1594268714227,
      "duration" : 44815
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <scripts.test05_app_login.TestAppLogin object at 0x041AEA10>, phone = '13812345678', code = '246810'\n\n    def test_app_login(self, phone=\"13812345678\", code=\"246810\"):\n        # 1. 调用登录app业务方法\n>       self.login.page_app_login(phone, code)\n\nscripts\\test05_app_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\page_app_login.py:28: in page_app_login\n    self.page_click_login_btn()\npage\\page_app_login.py:18: in page_click_login_btn\n    self.base_click(page.app_login_btn)\nbase\\base.py:49: in base_click\n    self.base_find(loc).click()\nbase\\base.py:25: in base_find\n    poll_frequency=poll).until(lambda x: x.find_element(*loc)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"145dda07-f6f0-41c6-84ca-81f0dbc8c8da\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x041B14F8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\program files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e79261fa42ec0ef",
      "name" : "log",
      "source" : "e79261fa42ec0ef.txt",
      "type" : "text/plain",
      "size" : 1198
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1594268850541,
      "stop" : 1594268872948,
      "duration" : 22407
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test05_app_login"
  }, {
    "name" : "subSuite",
    "value" : "TestAppLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-VRLRK3E"
  }, {
    "name" : "thread",
    "value" : "5904-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test05_app_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "14f50b9e4e1bbcd9.json",
  "parameterValues" : [ ]
}