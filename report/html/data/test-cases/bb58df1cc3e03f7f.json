{
  "uid" : "bb58df1cc3e03f7f",
  "name" : "test_mis_audit",
  "fullName" : "scripts.test04_mis_audit.TestMisAudit#test_mis_audit",
  "historyId" : "9882f7a913a37e1c698f7c88bfc6c7ef",
  "time" : {
    "start" : 1594137613668,
    "stop" : 1594137651134,
    "duration" : 37466
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <scripts.test04_mis_audit.TestMisAudit object at 0x03CAA070>, title = 'test001-cd001', channel = '数据库'\n\n    def test_mis_audit(self, title=\"test001-cd001\", channel=\"数据库\"):\n        # 调用审核文章业务方法\n>       self.audit.page_mis_audit(title, channel)\n\nscripts\\test04_mis_audit.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\page_mis_audit.py:64: in page_mis_audit\n    self.article_id = self.page_get_article_id()\npage\\page_mis_audit.py:43: in page_get_article_id\n    return self.base_get_text(page.mis_article_id)\nbase\\base.py:57: in base_get_text\n    log.info(\"正在对：{}元素获取文本操作！获取的文本值为：{}\".format(loc, self.base_find(loc).text))\nbase\\base.py:25: in base_find\n    poll_frequency=poll).until(lambda x: x.find_element(*loc)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"40e34a69cd54ab539f0c1c5d5f71de9f\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x031411E0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\program files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1594137604370,
      "stop" : 1594137613665,
      "duration" : 9295
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <scripts.test04_mis_audit.TestMisAudit object at 0x03CAA070>, title = 'test001-cd001', channel = '数据库'\n\n    def test_mis_audit(self, title=\"test001-cd001\", channel=\"数据库\"):\n        # 调用审核文章业务方法\n>       self.audit.page_mis_audit(title, channel)\n\nscripts\\test04_mis_audit.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\page_mis_audit.py:64: in page_mis_audit\n    self.article_id = self.page_get_article_id()\npage\\page_mis_audit.py:43: in page_get_article_id\n    return self.base_get_text(page.mis_article_id)\nbase\\base.py:57: in base_get_text\n    log.info(\"正在对：{}元素获取文本操作！获取的文本值为：{}\".format(loc, self.base_find(loc).text))\nbase\\base.py:25: in base_find\n    poll_frequency=poll).until(lambda x: x.find_element(*loc)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"40e34a69cd54ab539f0c1c5d5f71de9f\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x031411E0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\program files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "72b92089d0405b2f",
      "name" : "log",
      "source" : "72b92089d0405b2f.txt",
      "type" : "text/plain",
      "size" : 3086
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1594137651234,
      "stop" : 1594137653934,
      "duration" : 2700
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test04_mis_audit"
  }, {
    "name" : "subSuite",
    "value" : "TestMisAudit"
  }, {
    "name" : "host",
    "value" : "DESKTOP-VRLRK3E"
  }, {
    "name" : "thread",
    "value" : "1608-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test04_mis_audit"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "bb58df1cc3e03f7f.json",
  "parameterValues" : [ ]
}